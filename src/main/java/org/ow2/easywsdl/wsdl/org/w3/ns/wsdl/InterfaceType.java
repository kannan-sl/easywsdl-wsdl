//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.16 at 03:46:51 PM CET 
//


package org.ow2.easywsdl.wsdl.org.w3.ns.wsdl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Copyable;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.builder.CopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBCopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBToStringBuilder;
import org.w3c.dom.Element;


/**
 * <p>Java class for InterfaceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InterfaceType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.w3.org/ns/wsdl}ExtensibleDocumentedType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="operation" type="{http://www.w3.org/ns/wsdl}InterfaceOperationType"/>
 *         &lt;element name="fault" type="{http://www.w3.org/ns/wsdl}InterfaceFaultType"/>
 *         &lt;any processContents='lax' namespace='##other'/>
 *       &lt;/choice>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="extends">
 *         &lt;simpleType>
 *           &lt;list itemType="{http://www.w3.org/2001/XMLSchema}QName" />
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;attribute name="styleDefault">
 *         &lt;simpleType>
 *           &lt;list itemType="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InterfaceType", propOrder = {
    "operationOrFaultOrAny"
})
public class InterfaceType
    extends ExtensibleDocumentedType
    implements CopyTo, Copyable, Equals, HashCode, ToString
{

    @XmlElementRefs({
        @XmlElementRef(name = "operation", namespace = "http://www.w3.org/ns/wsdl", type = JAXBElement.class),
        @XmlElementRef(name = "fault", namespace = "http://www.w3.org/ns/wsdl", type = JAXBElement.class)
    })
    @XmlAnyElement(lax = true)
    protected List<Object> operationOrFaultOrAny;
    @XmlAttribute(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NCName")
    protected String name;
    @XmlAttribute(name = "extends")
    protected List<QName> _extends;
    @XmlAttribute
    protected List<String> styleDefault;

    /**
     * Gets the value of the operationOrFaultOrAny property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the operationOrFaultOrAny property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOperationOrFaultOrAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link InterfaceOperationType }{@code >}
     * {@link Element }
     * {@link JAXBElement }{@code <}{@link InterfaceFaultType }{@code >}
     * {@link Object }
     * 
     * 
     */
    public List<Object> getOperationOrFaultOrAny() {
        if (operationOrFaultOrAny == null) {
            operationOrFaultOrAny = new ArrayList<Object>();
        }
        return this.operationOrFaultOrAny;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the extends property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extends property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtends().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QName }
     * 
     * 
     */
    public List<QName> getExtends() {
        if (_extends == null) {
            _extends = new ArrayList<QName>();
        }
        return this._extends;
    }

    /**
     * Gets the value of the styleDefault property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the styleDefault property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStyleDefault().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getStyleDefault() {
        if (styleDefault == null) {
            styleDefault = new ArrayList<String>();
        }
        return this.styleDefault;
    }

    public void toString(ToStringBuilder toStringBuilder) {
        super.toString(toStringBuilder);
        {
            List<Object> theOperationOrFaultOrAny;
            theOperationOrFaultOrAny = this.getOperationOrFaultOrAny();
            toStringBuilder.append("operationOrFaultOrAny", theOperationOrFaultOrAny);
        }
        {
            String theName;
            theName = this.getName();
            toStringBuilder.append("name", theName);
        }
        {
            List<QName> theExtends;
            theExtends = this.getExtends();
            toStringBuilder.append("_extends", theExtends);
        }
        {
            List<String> theStyleDefault;
            theStyleDefault = this.getStyleDefault();
            toStringBuilder.append("styleDefault", theStyleDefault);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new JAXBToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof InterfaceType)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        super.equals(object, equalsBuilder);
        final InterfaceType that = ((InterfaceType) object);
        equalsBuilder.append(this.getOperationOrFaultOrAny(), that.getOperationOrFaultOrAny());
        equalsBuilder.append(this.getName(), that.getName());
        equalsBuilder.append(this.getExtends(), that.getExtends());
        equalsBuilder.append(this.getStyleDefault(), that.getStyleDefault());
    }

    public boolean equals(Object object) {
        if (!(object instanceof InterfaceType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        super.hashCode(hashCodeBuilder);
        hashCodeBuilder.append(this.getOperationOrFaultOrAny());
        hashCodeBuilder.append(this.getName());
        hashCodeBuilder.append(this.getExtends());
        hashCodeBuilder.append(this.getStyleDefault());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public Object copyTo(Object target, CopyBuilder copyBuilder) {
        final InterfaceType copy = ((target == null)?((InterfaceType) createCopy()):((InterfaceType) target));
        super.copyTo(copy, copyBuilder);
        {
            List<Object> sourceOperationOrFaultOrAny;
            sourceOperationOrFaultOrAny = this.getOperationOrFaultOrAny();
            List<Object> copyOperationOrFaultOrAny = ((List<Object> ) copyBuilder.copy(sourceOperationOrFaultOrAny));
            copy.operationOrFaultOrAny = null;
            List<Object> uniqueOperationOrFaultOrAnyl = copy.getOperationOrFaultOrAny();
            uniqueOperationOrFaultOrAnyl.addAll(copyOperationOrFaultOrAny);
        }
        {
            String sourceName;
            sourceName = this.getName();
            String copyName = ((String) copyBuilder.copy(sourceName));
            copy.setName(copyName);
        }
        {
            List<QName> sourceExtends;
            sourceExtends = this.getExtends();
            List<QName> copyExtends = ((List<QName> ) copyBuilder.copy(sourceExtends));
            copy._extends = null;
            List<QName> uniqueExtendsl = copy.getExtends();
            uniqueExtendsl.addAll(copyExtends);
        }
        {
            List<String> sourceStyleDefault;
            sourceStyleDefault = this.getStyleDefault();
            List<String> copyStyleDefault = ((List<String> ) copyBuilder.copy(sourceStyleDefault));
            copy.styleDefault = null;
            List<String> uniqueStyleDefaultl = copy.getStyleDefault();
            uniqueStyleDefaultl.addAll(copyStyleDefault);
        }
        return copy;
    }

    public Object copyTo(Object target) {
        final CopyBuilder copyBuilder = new JAXBCopyBuilder();
        return copyTo(target, copyBuilder);
    }

    public Object createCopy() {
        return new InterfaceType();
    }

}
