//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-792 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.16 at 03:46:51 PM CET 
//


package org.ow2.easywsdl.wsdl.org.xmlsoap.schemas.wsdl.soap;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Copyable;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.builder.CopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBCopyBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBEqualsBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBHashCodeBuilder;
import org.jvnet.jaxb2_commons.lang.builder.JAXBToStringBuilder;
import org.ow2.easywsdl.wsdl.org.xmlsoap.schemas.wsdl.TExtensibilityElement;


/**
 * <p>Java class for tBody complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tBody">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.xmlsoap.org/wsdl/}tExtensibilityElement">
 *       &lt;attGroup ref="{http://schemas.xmlsoap.org/wsdl/soap/}tBodyAttributes"/>
 *       &lt;attribute name="parts" type="{http://www.w3.org/2001/XMLSchema}NMTOKENS" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tBody")
@XmlSeeAlso({
    TFaultRes.class
})
public class TBody
    extends TExtensibilityElement
    implements CopyTo, Copyable, Equals, HashCode, ToString
{

    @XmlAttribute
    @XmlSchemaType(name = "NMTOKENS")
    protected List<String> parts;
    @XmlAttribute
    protected List<String> encodingStyle;
    @XmlAttribute
    protected UseChoice use;
    @XmlAttribute
    @XmlSchemaType(name = "anyURI")
    protected String namespace;

    /**
     * Gets the value of the parts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the parts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getParts() {
        if (parts == null) {
            parts = new ArrayList<String>();
        }
        return this.parts;
    }

    /**
     * Gets the value of the encodingStyle property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the encodingStyle property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEncodingStyle().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getEncodingStyle() {
        if (encodingStyle == null) {
            encodingStyle = new ArrayList<String>();
        }
        return this.encodingStyle;
    }

    /**
     * Gets the value of the use property.
     * 
     * @return
     *     possible object is
     *     {@link UseChoice }
     *     
     */
    public UseChoice getUse() {
        return use;
    }

    /**
     * Sets the value of the use property.
     * 
     * @param value
     *     allowed object is
     *     {@link UseChoice }
     *     
     */
    public void setUse(UseChoice value) {
        this.use = value;
    }

    /**
     * Gets the value of the namespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNamespace() {
        return namespace;
    }

    /**
     * Sets the value of the namespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNamespace(String value) {
        this.namespace = value;
    }

    public void toString(ToStringBuilder toStringBuilder) {
        super.toString(toStringBuilder);
        {
            List<String> theParts;
            theParts = this.getParts();
            toStringBuilder.append("parts", theParts);
        }
        {
            List<String> theEncodingStyle;
            theEncodingStyle = this.getEncodingStyle();
            toStringBuilder.append("encodingStyle", theEncodingStyle);
        }
        {
            UseChoice theUse;
            theUse = this.getUse();
            toStringBuilder.append("use", theUse);
        }
        {
            String theNamespace;
            theNamespace = this.getNamespace();
            toStringBuilder.append("namespace", theNamespace);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new JAXBToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof TBody)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        super.equals(object, equalsBuilder);
        final TBody that = ((TBody) object);
        equalsBuilder.append(this.getParts(), that.getParts());
        equalsBuilder.append(this.getEncodingStyle(), that.getEncodingStyle());
        equalsBuilder.append(this.getUse(), that.getUse());
        equalsBuilder.append(this.getNamespace(), that.getNamespace());
    }

    public boolean equals(Object object) {
        if (!(object instanceof TBody)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new JAXBEqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        super.hashCode(hashCodeBuilder);
        hashCodeBuilder.append(this.getParts());
        hashCodeBuilder.append(this.getEncodingStyle());
        hashCodeBuilder.append(this.getUse());
        hashCodeBuilder.append(this.getNamespace());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new JAXBHashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public Object copyTo(Object target, CopyBuilder copyBuilder) {
        final TBody copy = ((target == null)?((TBody) createCopy()):((TBody) target));
        super.copyTo(copy, copyBuilder);
        {
            List<String> sourceParts;
            sourceParts = this.getParts();
            List<String> copyParts = ((List<String> ) copyBuilder.copy(sourceParts));
            copy.parts = null;
            List<String> uniquePartsl = copy.getParts();
            uniquePartsl.addAll(copyParts);
        }
        {
            List<String> sourceEncodingStyle;
            sourceEncodingStyle = this.getEncodingStyle();
            List<String> copyEncodingStyle = ((List<String> ) copyBuilder.copy(sourceEncodingStyle));
            copy.encodingStyle = null;
            List<String> uniqueEncodingStylel = copy.getEncodingStyle();
            uniqueEncodingStylel.addAll(copyEncodingStyle);
        }
        {
            UseChoice sourceUse;
            sourceUse = this.getUse();
            UseChoice copyUse = ((UseChoice) copyBuilder.copy(sourceUse));
            copy.setUse(copyUse);
        }
        {
            String sourceNamespace;
            sourceNamespace = this.getNamespace();
            String copyNamespace = ((String) copyBuilder.copy(sourceNamespace));
            copy.setNamespace(copyNamespace);
        }
        return copy;
    }

    public Object copyTo(Object target) {
        final CopyBuilder copyBuilder = new JAXBCopyBuilder();
        return copyTo(target, copyBuilder);
    }

    public Object createCopy() {
        return new TBody();
    }

}
